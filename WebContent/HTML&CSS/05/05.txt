1. 개요
 - 스마트폰 웹페이지는 어플리케이션인지 웹 페이지인지 구분하지 못하게 하는게 현재의 메타
 
 * Native Application : 안드로이드, ios처럼 os 제작 업체에서 제공하는 SDK를 사용하여 만든 APP
 * Hybrid Application : Native Application + HTML5를 이용하여 페이지를 구성
   (배포와 수정이 자유롭고, 다양한 sdk를 습득하지 않아도 된다는 장점이 있으나 기능에 제한이 있을 수 있다는 단점이 있음.)


2. 모바일 웹 개발시 주의사항
 - overflow를 사용하여 스크롤을 생성할 수 없음. 
  :스마트폰 브라우저는 기본적으로 스크롤 기능을 가지고 있기 때문
 
 - 상태 선택자가 웹과 다른 경우가 있음.
  : 터치방식이므로 :hover를 쓸 수 없음. 터치하고 때므로 active도 제대로 작동되지 않을 수 있음.
 
 - 동위선택자의 제한
  :  ~를 지원하지 않는 경우가 많음


 - 옛날 모바일 브라우저는 css3 기능을 제공하지 않는 경우가 있음.

 - 디바이스에 따라서 브라우저 최적화가 다름


 
3. Viewport

 - 모바일의 경우 화면 설정과 관련된 정보를 제공.
 - viewport를  사용하지 않으면 웹의 비율로 화면이 나타남.
 <meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no">
 

4. 초기화
 - 웹과 동일하게 초기화 css를 적용
 - 초기화의 경우 기본 Html tag 전부를 선택자로 선택하고 외부 리소스의 링크로 인하여 성능 저하가 일어날 수 있음.
 - 따라서 초기화는 최소한의 기능만 사용하는 것이 좋다.


5. 스프라이트 이미지
 - 이미지를 불러오는 속도를 빠르게 하기 위해서 한장에 이미지를 이용하여 모든 이미지를 불러오게 함. 
 - background: url('/image.png'); background-position : -62px 0; text-indent: -9999px;

 ex ) http://admin.pixelplus.com/httpobject/img/common/ui-icons_b83400_256x240.png 


6. 비율
 - 모바일은 웹과 달리 디바이스에 따라서 화면이 달라지기 때문에 정확한 px로 값을 두면 화면이 제대로 나오지 않을 수 있음.
 - 한 화면에 보여지는  목록의 갯수가 정해져 있다면 %로 너비를 둠.
 ex ) 2개 : 50% , 3개 33% ...


7. ::before 
 - 해당 tag의 앞에 지정되는 css 
 - 
http://www.w3schools.com/cssref/tryit.asp?filename=trycss_sel_before_style


