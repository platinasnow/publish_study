3장 - 1 마크업

     웹을 구성하는 3가지 레이어(콘텐트, 디자인, 기능) 중 콘텐트를 알아보고, HTML을 사용해서 문서 내용을 구성하고
     의미를 부여하는 마크업 방법을 알아본다.

     HTML의 역할
     : 가능한 범위 내에서 콘텐트에 의미를 부여하는 것

     구문과 의미
     : 마크업 언어에는 두 가지 핵심 컴포넌트가 존재
          1.페이지 각 부분이 갖는 "의미"에 대한 정의
          2.의미 있고 유효한 마크업을 위해 개발자가 반드시 지켜야 할 "구문 또는 규칙"

     ex) <strong> : 콘텐트를 강조하는 의미로 사용


     HTML vs XHTML
     *파생
          HTML : SGML(Standard Generated Markup Language)
          XHTML : XML (Extensible Markup Language)
     *차이점
          XHTML은 HTML과 달리 대/소문자를 구분함. 따라서 의미 요소와 속성명 정의할 때 모두 소문자를 사용하는 것을 권장
     
     HTML5
     :W3C와 별개로 모질라와 webkit브라우저 개발에 관련 있는 사람들이 개발 시작
      -> 2007년 W3C로 넘어옴.
     :HTML4, XHTML1과 호환.

     비어 있지 않은 HTML 요소
     <p> This is a <strong> paragraph</strong> element</p>
     >여기서 p 태그는 문자열 텍스트 또는 다른 요소<strong>을 담고 있음.
     
     비어 있는 HTML 요소
     <img src="imgaes/portrait.png" alt="a portrait of the artist as a middle aged developer">
     >여기서 img 태그는 문자열 텍스트 또는 다른 요소를 담고 있지 않음.
     >XHTML의 경우 다음과 같이 표기함
       <img src="imgaes/portrait.png" alt="a portrait of the artist as a middle aged developer"/>   

     DOCTYPE (문서타입)
     :DOCTYPE 선언은 문서가 사용하고 있는 마크업 언어, 버전, 구문 규칙 준수 범위 등을 브라우젖에게 넘겨준다.
     >모든 HTML 파일의 시작 부분에 HTML 문서의 타입을 선언한다.

     구문 규칙 준수 기준 3가지
     1.Strict(엄격) - font와 같은 화면 디자인에 관한 HTML 요소와 속성을 사용할 수 없는 문서 타입.(HTML 4.01/XHTML 1.0에 적용)
     2.Transitional(보통, 느슨) - 디자인 요소와 비 디자인 요소 모두 포함할 수 있을 때 선언. 새롭게 개발중인 시스템에 사용하기 보다는 기존 문서에 디자인 요소를 추가하고 싶을 때 사용 권장
     3.Frameset(프레임적용) - HTML 프레임을 사용하는 문서에서 사용. 현재는 사용을 지양하는 문서 타입.
     
 
 
    DOCTYPE 선언
   : 언어를 선택하고(HTML or XHTML) 사용 버전과 DOCTYPE을 결정하면 HTML 파일 첫 줄에 적절한 DOCTYPE을 
    선언해야 한다.
      <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
      "http://www.w3.org/TR/html4/strict.dtd">




    HTML의 기본 구조

    : HTML문서의 최상위 요소는 html.
    head 와 body 요소는 html만이 담을 수 있는 요소로,

    <html>
      <head></head>
      <body></body>
    </html>

    head  : 메타 정보(문서 자체에 대한 정보-문서 제목, 스크립트와 스타일 시트 파일의 링크, 검색엔진을 위한 검색 키워드)만 가지고 있음. 
             브라우저만 사용하는 정보이며 일반 사용자에게는 보이지 않는다.

        title : head요소가 필수로 담아야 할 요소로 문자열 콘텐트를 담을 수 있다.

        meta : 선택 요소로, 페이지에 대한 추가 정보를 제공할 때 사용. 
              ex) <mata name="author(데이터 타입)" content="Jane Austen(데이터 값)">

        script : 문서 내에 내장하는 방식, 외부링크로 참조하는 방식 2가지가 있다. (둘 다 사용할수는 없음)
          1.내장 방식 
            <script type="text/j-vascript">
            window.alert('hello world')
            </script>
          2.외부링크 참조 방식
            <script type="text/j-vascript" src="scripts/effects.js">
            </sciprt>
            -src 속성이 있는 script 요소의 경우 내장 스크립트를 작성해도 무시됨.

 
        style : head 요소 내에서만 쓸 수 있으며, CSS 코드를 내장하고자 할 때 사용. 
                           외부 CSS 파일을 참조해서 활용할 경우 head 요소에서 link요소를 사용해야함.

        link : 외부 CSS 파일을 참조할 때 사용. a요소와는 다르게 눈에 보이지 않기에 정보 전달 목적으로 사용하는 것 지양

    body  :  body 요소의 내용은 브라우저를 통해 웹 페이지의 형태로 화면에 출력됨. 
               body 요소는 표제(heading), 단락(paragraph), 목록(list)뿐 아니라 이미지와 영상 같은 웹 자원을 링크를 통해
               외부에서 가져오기도 함.

        표제 : 6단계의 표제가 제공된다. (h1 ~ h6) 이를 통해 콘텐츠의 논리적인 단계를 지정하는 것이 좋음.
        ex) <h1>오만과 편견</h1>
                <h2>1권</h2>
                  <h3>1장</h3>

        단락 : 유사한 주제를 갖는 문자열의 묶음. <p>요소가 대표적. 
        이를 빈 여백을 처리하는 용도로 사용하면 안됨. (의미 부여를 위한 요소를 디자인 요소로 잘못 사용)


        줄바꿈 : <br/>


        div : 콘텐트나 특정 요소를 묶을 수 있고, div 간에 계층 구조를 부여할 수 있음.
                div요소를 사용하면 문서의 가독성을 크게 향상시킬 수 있음.
                class나 id 속성을 결합하면 div는 자신이 포함하고 있는 콘텐트에 특정 의미를 부여할 수 있고,
                  CSS 디자인 스타일 적용도 편리하게 할 수 있음. 


        마크업 언어의 주석 처리
        : <!--주석-->
        :div 태그를 종료하는 부분에서 잘 활용할 수 있다. 종료 태그 뒤에 주석을 추가하면 시작태그와 종료태그를 쉽게 대응시킬 수 있음.
        ex)  </div> <!-- chapter div 닫기-->
                   </div> <!-- volume div 닫기-->
             </div> <!-- book div 닫기-->


        목록 : 순서 목록(ol), 비순서 목록(ul), 정의 목록(dl), 중첩 목록 등이 있다.
               1. 순서 목록(ol) - 앞뒤 관계가 중요한 정보 목록을 나타낼 때 
        <ol>
            <li>1</li>
            <li>2</li>
        </ol>
               2. 비순서 목록(ul) - 앞뒤 관계에 큰 의미를 두지 않는 정보 목록을 나타낼 때
        <ul>
           <li>apple</li>
           <li>graph</li>
           <li>orange</li>
        </ul>
               3. 정의 목록 (dl) - 어떤 단어에 의미를 부여하고 정의를 내림.
        <dl>
           <dt>When</dt>
              <dd>7pm-late, Friday 2nd October</dd>
           <dt>Where</dt>
              <dd>Pyrmont Bridge Hotel (Upstairs) , </br>
             96 Union 5t, Pyrmont . </dd>
        </dl>
               4. 중첩 목록 - 목록의 한 항목 안에 새로운 목록을 중첩하여 구성(사이트 맵 구성할 때 유용)
        <li>Software</li>
        <li>Hardware</li>
        <li>Caffeine
           <ul>
              <li>Coffee</li>
              <li>Cola</li>
           </ul>
        </li>
        <li>T-Shirts</li>

         인라인 요소
           : 화면에 출력될 때 줄이 바뀌지 않고 같은 줄에 등장. 다른 인라인 요소를 포함할 수는 있지만, 블록 요소를 포함할 수는 없다.
          (HTML 규칙)
            - 블록 요소는 다른 블록 요소와 인라인 요소 모두를 포함할수 있습니다.
            - 블록 요소는 블록 요소 안에만 포함될 수 있습니다.
            - 인라인 요소는 인라인 요소만 포함할수 있습니다.
            - 인라인 요소는 블록 요소와 인라인 요소 모두 포함될 수 있습니다.
            - p 요소는 블록 요소이지만 다른 블록 요소를 포함할수 없습니다.

        강조 (emphasis)
        : strong, em 요소를 사용. strong의 경우 bold폰트로 표현, em의 경우 기울임꼴로 표현

        약어 (abbreviation)
        : abbr > 어떤 단어의 약어나 머리글자(acronym)를 표현하는데 사용하며 해당 약어의 본래 단어는 title속성으로 제공
           ex) <abbr title = "World Wid Web Consortium">W3C</abbr>


    HTML 의미의 확장
    : HTML이 아무리 다양한 요소를 제공한다고 해도 최근의 웹 개발에서 필요로 하는 ex)뉴스, 잡지, 책 관련 웹사이트에서 필요로 하는
      모든 의미 요소를 제공할 수는 없다. 개발자는 이를 class 와 id 속성을 이용하여 HTML의 의미를 쉽게 확장시켜 표현할 수 있다.

        class
        : 서로 유사한 속성의 요소는 같은 분류안에 있으므로 같은 class 속성을 부여할 수 있고, CSS를 통해 디자인 요소를 추가하고
          자바스크립트를 통해 기능을 부여할 때도 매우 유용하다.
          HTML 요소는 하나의 class 속성을 가질 수 있지만, 공백을 통해 여러 개의 class 값을 가질 수 있다.

        id
        : class속성과 유사하지만, id 속성은 어떤 요소에 대해 유일한 특성을 정의한다. HTML 문서에서 특정 id 속성값은 오직 하나만 있어야 한다.

        span
        : div와 비슷한 역할을 하는 인라인 요소로써, 특정 콘텐트에 원하는 의미를 부여할 수 있다.
           (div는 블록요소, 인라인요소 모두 담을 수 있는 특별한 의미없는 그릇 요소)

    링크

      앵커
      : 링크가 시작될 출발점 역할(a태그 클릭)과 링크의 목적지 역할(href 속성)을 한다.
      : 목적지 역할을 수행하는 앵커의 경우 id 속성값을 갖고 다른 앵커의 목적지가 될 수 있다.
         <a id = "contents"></a>   <a href="#contents">내용</a>

      다음과 같은 링크를 제공할 수 있다.

      - 한 사이트 내 다른 페이지. 즉 한 서버의 같은 root 디렉터리 안에있는 다른 페이지에 대한 링크
      - 같은 사이트 내 다른 페이지의 특정 부분에 대한 링크
      - 웹상의 다른페이지에 대한링크
      - 웹 상의 다른 메이지의 특정 부분에 대한 링크
      - 이미지 파일과 같이 웹 상에있는 자원 혹은 FTP 서버에 있는 지원에 대한 링크

      title과 rel 속성
      : 앵커 요소는 두 개의 링크에 대한 추가 정보 제공을 위해 추가 속성을 가질 수 있다.
      1. title - 링크에 대한 추가 정보를 제공하면 어떤 브라우저는 이 정보를 툴팁 형태로 사용자에게 보여줌
      2. rel - 링크 목적지와 해당 링크가 있는 문서와의 관계 정보를 제공

      앵커가 담을 수 있는 것
      : 앵커는 인라인 요소로, 인라인 요소만을 담을 수 있다. h 요소를 감쌀 수 없고, h 요소 안의 콘텐트를 앵커 요소로 감싸야 한다.
      URL의 절대 경로와 상대 경로
       : 같은 사이트 내 다른 HTML 문서로의 링크는 두 가지 방법 중 한 가지를 통해 가능하다. 즉 URL의 상대경로나 절대경로를 통해 다른 문서로
         링크하는 것이다. 
          - 상대 경로 URL : 두 개의 문서 파일이 root 디렉터리 하나를 공유하고 있을 때만 유효.
           ' 상대 경로 URL 관련해서 그리 알려지지 않았지만 유용한 팁이 있으니, 바로 '/'이다. '/'를 작성하면
             사이트의 root 디렉터리(사이트의 도메인 이름이기도 함)로 한 번에 이동한다. 
             즉 사이트의 어떤 곳이든 index.html로 이동하려면 간단히 /index.html과 같이 URL을 작성하면 된다. '
          - 링크하는 곳이 다른 페이지의 특정 부분이라면 해당 부분의 id 값을 URL 마지막에 추가한다.
            <a href="details/contactus/contact.html#contactform">


      웹 상에 있는 특정 자원으로의 링크
        : 다른 웹 자원에 접근하려면 절대 경로 URL을 사용한다. 예를 들어 contact 디렉터리에 있는 모든 자원에 접근하려면 전체 URL을 
          다음과 같이 작성한다.
          <a href="http://devwws.com/contact/">Contact the author (he's very nice)</a>
          여기서 프로토콜 정보(http://) 또한 반드시 작성해야한다. 대부분의 브라우저가 링크를 도메인 이름으로 해석하지 못하기 때문
