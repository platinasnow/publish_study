4-12 동적 선택자
HTML요소는 액션에 따라 서로다른 상태에 놓일수 있다.
동적 선택자는 이런 상태에 기반해 특정요소를 선택할수있는 선택자 말함.

일반선택자:동적선택자(특정요소:요소의 상태정보)
 ·hover - 마우스가 요소 위에 놓여있을때의 상태 
	  (HTML모든요소에 적용가능, IE6이전 버전은 a요소에만적용가능) 
 ·active - 특정요소가 활성화된 상태
 ·visited - 방문했던 상태 요소에 접근할때 사용
 ·focus - 키보드 입력 받을수 있는 상태

동적 선택자 작성 순서
 - link, visited, hover, focus, active
 (a요소는 항상 link상태를 가지므로 마지막에쓰면 앞에선택자 덮어씀, focus제외)


a:link{		
  -----		 동적선택자 추가 -> 요소의 특성을 구체화함
  color : red	  ->우선 선택자가됨 ∴a요소는 red
}
a {
  color : green
}



4-13 기본 페이지 레이아웃

블록요소 vs 인라인 요소
css가 화면에 출력할수 있는 방법 두가지 
·블록 : 페이지 내에서 새로운 레이아웃 블록 생성 
·인라인 : 새로운 블록 생성하지 않고 요소사이에 배치


박스모델
4개의 컴포넌트로 구성 - 마진, 테두리, 패딩, 콘텐트 


너비
width 속성으로 퍼센트값, 수치값으로 지정
인라인 요소는 너비,높이 속성 지정x 
 => 페이지 레이아웃에 영향주지 못함
하지만 이미지와 동영상같은 내장콘텐트는 width,height 적용가능


높이
height 속성으로 수치값,em,퍼센트 값으로 지정
(퍼센트값으로 지정할땐 높이값이 명시적으로 지정 되어있어야함)


튀어나온 콘텐트
overflow 속성 - 
 width와 height 속성을준 요소 전체보다 
 요소가포함한 콘텐트가 더 큰 상황에서 사용 

·visible : 요소 전체 크기보다 큰 콘텐트가 레이아웃을 벗어난 상태로 출력
·hideen : 레이아웃을 벗어난 부분은 잘림
·scroll : 가로 세로 스크롤바 생성
·auto : 상황에 따라 스크롤바가 생성,가로세로 한쪽만 생성,비생성 으로 나뉨

*iphone는 스크롤바 기능 지원하지 않아서
 스크롤바로 큰콘텐츠를 볼수 있다는 보장이 없음.


마진
요소의 배경색상 및 이미지가 적용되지 않음 즉 박스모델에서 투명한 영역

속성값-
·픽셀  
·em : 사용자가 콘텐트의 글꼴 크기를 마음대로 변경해도 
	여백의 크기 또한 같은 비율로 변경됩니다
·퍼센트 : 요소의 전체 크기 기준으로 여백크기 산정

속성 4가지-
 magin-top, magin-left,magin-botton, magin-right
속기법-
 margin만 쓰면 1개,2개,4개 속성값 지정가능

마진통합
세로방향으로 마진을 지정한 두개의 서로다른 요소가 수직바향으로 접해있을때
두 요소의 마진간격은 두값을 합한게 아닌 두값가운데 큰값으로 통합됨.

  
테두리
디폴트는 아무스타일도 적용되지 않음.
 ·border-style -1차원 스타일 : solid, dashed, dotted
	       -2차원 스타일 : groove,ridge, inset, outset(거의사용x)
	       -css3 2차원 속성 : box-shadow, border-image(13장)
 ·border-color : 디폴트로 글자열과 같은 색상, 투명색상도 가능  		
 ·border-width : thin, medium, thick중 하나의 값이나, 수치로 적용가능

속기법-
 p{
   border: .1em red solid (띄어쓰기로 구분)
 }

개별테투리 속성부여
 -특정방향만 적용가능
    border-top-style
    border-top-color
    border-top-width 
 -약식표기
    border-bottom: .2em groove blue

border-radius : 둥근 모서리 적용(13장)


패딩
배경색, 배경이미지가 적용되는 부분
속성 4가지 -
 padding-top, padding-left, padding-botton, padding-right
퍼센트, 수치 값으로 지정 가능
마진과 똑같이 속기법 사용가능


요소 너비와 높이 산정
너비와 높이 -> 콘텐트의 너비와 높이
콘텐트 크기 + 패딩크기 + 테두리 두께 -> 요소 전체 크기

box-sizing(css3) 사용
 - 요소 전체의 너비와 높이 산정
 - 콘텐트의 너비와 높이만 산정 가능



4-14 고급 페이지 레이아웃

다른요소와 자연스럽게 콘텐트를 띄우는 속성
 - float:right,left

float속성 초기화
 -clear:both, left, right


4-15 위치선정

position 속성
 ·position:static - 기본적인 흐름 가운데 요소를 위치시킴
		    top,bottom,left,right 속성 무시
 ·position:relative - 기본 흐름 가운데 위치후 top,left가 적용된 만큼 이동
		      수치값이 top>0 이면 요소가 아래로 이동
		               top<0 이면 요소가 위로 이동
 ·position:absolute - 기본 흐름을 벗어나 별개의 흐름을 갖음
		      relative, abslute, fixed가운데 속성을 갖는 첫요소 기분으로 이동
 ·position:fixed - 스크롤 이벤트가 일어나도 항상 고정된 위치에 자리
		   브라우저 창을 기준으로 이동


4-16 고급 선택자

인접 선택자 - 어떤 요소와 인접한 형제요소를 기준으로 특정 요소를 선택할수 있는 방법
		ex) li+li *IE7이상 지원가능

속성 선택자 - 속성값 기준으로 특정요소를 선택
 작성방법
  ·selector[attribute name] - img[alt]
  ·selector[attribute name=value] - img[alt=photo]
  ·selector[attribute name~=value] - p[class~=introduction] 띄어쓰기로 구분된 글자열 속성값일때
  ·selector[attribute name^=value] - a[href^=http://] 지정한 속성으로 시작할때
  ·selector[attribute name$=value] - a [href$=.pdf]  지정한 속성으로 끝날때
  ·selector[attribute name*=value] - a[href^=/contact /]  지정한 글자열을 포함할때
*IE경우 지원하지 않음 

전체 선택자 - 프로그램이 무거워질수있어 사용권장x
 * {
    magin:0
 }



4-17 화면 출력 타입

가시성
 visibility:visible - 요소를 화면에 출력
 visibility:hidden - 요소를 화면에서 감추지만 문서흐름은 그대로있고 빈공간으로 보임
 display:hidden - 화면에 출력하지 않음

리스트
display
 - 인라인 요소 -> 볼록 형태로 출력
 - 블록 요소 -> 인라인형태로 화면 출력
p {
   display: list-item
}

list-style-type
 - 요소를 리스트 형태로 표현하기 위해 쓰는 속성
  ·글머리 기호 : circle, disc, square 
  ·숫자 리스트 : decimal
  ·로마 숫자 : upper-roman, lower-roman
  ·그리스 문자 : upper-greek, lower-greek

list-style-image
 - 리스트 스타일 표시자로 이미지 사용할때 씀, 이미지 위치조정x


4-18 기타 속성

프린트 출력 속성 
 - windows, orphans, page-break

인터페이스 속성
 - 포커스된 요소 둘레에 스타일 부여 속성
 - 마우스 커서에 이미지파일 추가
 - 키워드를 통한 커서타입 지정

기타 선택자
 - 언어 선택자 - p:lang(en)
 - 글자 선택자 - h1:first-letter
		 p:first-line

css를 통한 콘텐트 생성
a[href]:after {
    content : attr(href)
} 



4-19 매체 타입
페이지를 출력하는 매체별로 서로 다른 스타일 시트를 적용할수 있음.

매체별로 특화시키는 방법

 1.매체 타입 링크하기
    media 속성 - all, screen, handheld, print. projection
 ex)<link rel='"stylesheet". href="style/style.css"
    type="textl C5S" media="print">
 2.매체 타입 내장하기
   style요소의 media 속성 지정
 3.@media
   css파일내에 선언문 추가
   ex) @media projection , screen {
	 p {
	   color : black
	 }
       }


4-20 스타일 시트 가져오기

@import url("./style/screen.css") screen. projection
@import url("./style/print.css") print
우선순위 - print > screen
@import는 다른 @구문보다 제일먼저 선언되어야함.


4-21 품질보증

 1.css 유효성 검증하기 - CSS 문서 또한 구문 자체에 에러가 없는지
 2.브라우저 지원 여부 확인 
 3.브라우저에서 미리 확인하기 

