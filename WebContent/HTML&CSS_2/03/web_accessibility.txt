웹 접근성

※ 일반적 관점
- 장애인등 불편한 사람들에게 접근하기 쉬운 편의성 제공.

※ 비지니스 관점 
- 접근성이 높은 사이트는 훨씬 나은 경험을 제공 -> 비용 절감 (voc감소, 매출 수익증가)
 
※ 국제적 법적 이슈
- 전 세계적으로 장애인 차별 방지 법안이 강화되어 웹과 웹사이트에서도 이것이 적용됨.


※ WCAG1
- 최초의 웹 접근성 표준
- 버전4 브라우저 시절인 1999년에 발표되어 다소 오래됨.
- A~ AAA 등급까지가 있으며 AAA는 까다롭고 유용하지 못해 보통 AA등급까지를 따름.

1. 텍스트가 아닌 모든 요소는 대체 텍스트를 지원해야 합니다.
2. 색깔만으로 정보를 구분하면 안된다.
3. 마크업과 스타일시트를 사용하되 적법하게 사용한다.
4. 내용에 쓰인 언어가 무엇인지 명시한다.
5. 표는 표를 지원하지 않는 환경에서도 유연하게 변경될 수 있게 만든다.
6. 새로운 기술을 사용한 페이지는 그 기술을 지원하지 않는 환경에서도 내용을 보존하면서 표시될 수 있게 한다.
7. 시간에 따라 변하는 콘텐츠는 사용자가 제어할 수 있게 한다.
8. 별도로 포함된 사용자 인터페이스에 대해서도 직접적인 접근성을 보장한다.
9. 장치 독립적인 설계를 한다.
10. 잠정적인 접근성 보장 기법을 사용한다.
11. W3C의 기술과 지침을 준수한다.
12. 맥락과 방향 정보를 제공한다.
13. 명확한 탐색 구조를 가져야 한다.
14. 문서는 명확하고 간결해야 한다.



※ 체크 사이트
www.cynthiasays.com
www.sidar.org/hera/index.php.en
wave.webaim.org
www.totalvalidator.com
www.achecker.ca/checker/index.php


※ WCAG2
- 특정 기술을 대상으로 하지 않고 객관적이고 소프트웨어나 사람이 직접 테스트하기 쉽게 개발.
- 확산 속도가 느려서 WCAG1을 지침으로 하는 경우가 많음.


1. 인지성 : 정보와 사용자 인터페이스 요소는 그들이 인지할 수 있도록 사용자에게 표시될 수 있어야 한다.
  1.1 모든 텍스트가 아닌 콘텐츠에 대체 텍스트를 사람들이 원하는 인쇄, 점자, 음성, 기호 또는 간단 언어들과 같은 형태로 제공 
  1.2 시간에 기본한 미디어에 대한 대안을 제공해야 한다.
  1.3 정보와 구조 손실 없이 콘텐츠를 다른 방식(예를 들면 더욱 간단한 형태)들로 표현될 수 있어야 한다.
  1.4 사용자들이 보다 쉽게 보고 들을 수 있는 전경에서 배경을 분리한 콘텐츠를 만들어야 한다.
2. 운용성 : 사용자 인터페이스 요소와 탐색은 운용 가능해야 한다.
  2.1 키보드로 모든 기능을 사용할 수 있도록 해야한다.
  2.2 읽기 및 콘텐츠를 사용하는 사용자에게 충분한 시간을 제공해야 한다.
  2.3 알려진 방법으로 발작을 일으킬 수 있는 콘텐츠를 디자인하지 않아야 한다.
  2.4 사용자가 탐색하고, 콘텐츠를 찾고 그들이 어디에 위치해 있는지를 알 수 있도록 도와주는 방법을 제공해야 한다.
3. 이해성 : 정보와 사용자 인터페이스 운용은 이해할 수 있어야 한다.
  3.1 텍스트 콘텐츠를 판독학 이해할 수 있도록 만들어야 한다.
  3.2 웹 페이지의 운용을 예측가능한 방법으로 제작해야 한다.
  3.3 사용자의 실수를 방지학 수정할 수 있도록 도와야 한다.
4. 내구성 : 콘텐츠를 보조기술을 포함할 넓고 다양한 사용자 에이전트에 의존되어 해석될 수 있도록 충분한 내구성을 가져야 한다.
  4.1 보조기술을 포함한 현재 및 미래의 사용자 에이전트의 호환성을 극대화해야 한다.



※ 링크와 title
- 링크의 목적지를 명확히 구분해야 함.
- title 속성을 사용하면 접근성이 향상되지만 마우스를 올려야 함
- 링크 문자열을 잘 지어줘야함.


※ 표제
- h1, h2, h3등 요소의 단계로 상대적 위치 파악가능


※ alt 문자열
- 문자열이 아닌 콘텐트에는 반드시 대체 문자열을 지정하는 것이 좋음.
- img 태그는 alt가 필수.


※ 색상대비
- 색을 구분하기 어려운 사람의 경우 색상만으로 의미를 부여하는 것은 알아보기 힘드므로 피해야 함.
- 배경과 문자의 색상대비가 약할 경우 보통 사람들도 알아보기 힘드므로 피해야 함.


※ 테이블
- caption : 간단한 테이블 정보
- summary : 테이블 전체의 개략적인 정보


<table summary="Full timetable for all three tracks of the first day of Web Directions South 2009">
<caption>Timetable for Day 1 of the conference</caption>


- abbr : th의 요소에 설명을 달아줌.
<th abbr="design">Design Track</th>
<th abbr="business">Business Track</th>
<th abbr="development"> Development Track</th>

- scope : th 셀 요소가 행에 해당하는 헤더인지 컬럼에 해당하는 헤더인지를 나타냄.
<th abbr="design" scope="col">Design Track</th>
<th abbr="business" scope="col">Business Track</th>
<th abbr="development" scope="col"> Development Track</th>


※ 폼
- label 문구를 클릭시에도 해당 폼에 기능이 작동되도록 작업해야함. 
<label for="target">설명</label><input type="text" id="target" />
- WCAG2에서는 label을 사용하지 않았을 경우 title을 넣는것을 권고함.

- fieldset, legend : 복잡한 폼끼리 묶기위해 사용. 
- fieldset 하나에 연관된 여러 폼을 넣어줌. 
- fieldset의 첫번째 요소는 항상 legend 요소여야 함. (table의 catpion과 같음)

<fieldset>
   <legend>Billing Contact</legend>
   <p>But first we need to know, <strong>who'll be paying for the tickets?</strong></p>
   <ol>
     ...
   </ol>
    ...
    
</fieldset>